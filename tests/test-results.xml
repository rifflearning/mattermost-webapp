<?xml-stylesheet type="text/xsl" href="junit-tests-report.xslt" ?>
<testsuites name="jest tests" tests="410" failures="0" time="5.806">
  <testsuite name="Actions.Storage" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:00" time="1.653" tests="9">
    <testcase classname="Actions.Storage setItem" name="Actions.Storage setItem" time="0.017">
    </testcase>
    <testcase classname="Actions.Storage removeItem" name="Actions.Storage removeItem" time="0.009">
    </testcase>
    <testcase classname="Actions.Storage setGlobalItem" name="Actions.Storage setGlobalItem" time="0.008">
    </testcase>
    <testcase classname="Actions.Storage removeGlobalItem" name="Actions.Storage removeGlobalItem" time="0.009">
    </testcase>
    <testcase classname="Actions.Storage actionOnGlobalItemsWithPrefix" name="Actions.Storage actionOnGlobalItemsWithPrefix" time="0.009">
    </testcase>
    <testcase classname="Actions.Storage actionOnItemsWithPrefix" name="Actions.Storage actionOnItemsWithPrefix" time="0.008">
    </testcase>
    <testcase classname="Actions.Storage clear" name="Actions.Storage clear" time="0.006">
    </testcase>
    <testcase classname="Actions.Storage rehydrate" name="Actions.Storage rehydrate" time="0.007">
    </testcase>
    <testcase classname="Actions.Storage rehydrate-with-timestamp" name="Actions.Storage rehydrate-with-timestamp" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="rhs view actions" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:00" time="2.086" tests="16">
    <testcase classname="rhs view actions clearCommentDraftUploads it calls actionOnGlobalItemsWithPrefix action correctly" name="rhs view actions clearCommentDraftUploads it calls actionOnGlobalItemsWithPrefix action correctly" time="0.009">
    </testcase>
    <testcase classname="rhs view actions updateCommentDraft it calls setGlobalItem action correctly" name="rhs view actions updateCommentDraft it calls setGlobalItem action correctly" time="0.001">
    </testcase>
    <testcase classname="rhs view actions makeOnMoveHistoryIndex it moves comment history index back" name="rhs view actions makeOnMoveHistoryIndex it moves comment history index back" time="0.002">
    </testcase>
    <testcase classname="rhs view actions makeOnMoveHistoryIndex it stores history message in draft" name="rhs view actions makeOnMoveHistoryIndex it stores history message in draft" time="0.001">
    </testcase>
    <testcase classname="rhs view actions submitPost it calls GlobalActions.emitUserCommentedEvent with post" name="rhs view actions submitPost it calls GlobalActions.emitUserCommentedEvent with post" time="0.001">
    </testcase>
    <testcase classname="rhs view actions submitPost it call PostActions.createPost with post" name="rhs view actions submitPost it call PostActions.createPost with post" time="0.001">
    </testcase>
    <testcase classname="rhs view actions submitReaction it adds a reaction when action is +" name="rhs view actions submitReaction it adds a reaction when action is +" time="0.001">
    </testcase>
    <testcase classname="rhs view actions submitReaction it removes a reaction when action is -" name="rhs view actions submitReaction it removes a reaction when action is -" time="0.001">
    </testcase>
    <testcase classname="rhs view actions submitCommand it calls ChannelActions.executeCommand" name="rhs view actions submitCommand it calls ChannelActions.executeCommand" time="0.001">
    </testcase>
    <testcase classname="rhs view actions submitCommand it calls submitPost on error.sendMessage" name="rhs view actions submitCommand it calls submitPost on error.sendMessage" time="0.171">
    </testcase>
    <testcase classname="rhs view actions makeOnSubmit it adds message into history" name="rhs view actions makeOnSubmit it adds message into history" time="0.002">
    </testcase>
    <testcase classname="rhs view actions makeOnSubmit it clears comment draft" name="rhs view actions makeOnSubmit it clears comment draft" time="0">
    </testcase>
    <testcase classname="rhs view actions makeOnSubmit it submits a reaction when message is +:smile:" name="rhs view actions makeOnSubmit it submits a reaction when message is +:smile:" time="0.002">
    </testcase>
    <testcase classname="rhs view actions makeOnSubmit it submits a command when message is /away" name="rhs view actions makeOnSubmit it submits a command when message is /away" time="0">
    </testcase>
    <testcase classname="rhs view actions makeOnSubmit it submits a regular post when message is something else" name="rhs view actions makeOnSubmit it submits a regular post when message is something else" time="0.001">
    </testcase>
    <testcase classname="rhs view actions makeOnEditLatestPost it dispatches the correct actions" name="rhs view actions makeOnEditLatestPost it dispatches the correct actions" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="highlightSearchTerms" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:00" time="2.773" tests="1">
    <testcase classname="highlightSearchTerms hashtags should highlight case-insensitively" name="highlightSearchTerms hashtags should highlight case-insensitively" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="PostUtils.containsAtChannel" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:00" time="2.827" tests="51">
    <testcase classname="PostUtils.containsAtChannel should return correct @all (same for @channel)" name="PostUtils.containsAtChannel should return correct @all (same for @channel)" time="0.013">
    </testcase>
    <testcase classname="PostUtils.shouldFocusMainTextbox basic cases" name="PostUtils.shouldFocusMainTextbox basic cases" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress null/empty: Test for null event" name="PostUtils.postMessageOnKeyPress null/empty: Test for null event" time="0.005">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress null/empty: Test for empty message" name="PostUtils.postMessageOnKeyPress null/empty: Test for empty message" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress null/empty: Test for shiftKey event" name="PostUtils.postMessageOnKeyPress null/empty: Test for shiftKey event" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress null/empty: Test for altKey event" name="PostUtils.postMessageOnKeyPress null/empty: Test for altKey event" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress no override: Test no override setting" name="PostUtils.postMessageOnKeyPress no override: Test no override setting" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress no override: empty message" name="PostUtils.postMessageOnKeyPress no override: empty message" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress no override: empty message on ctrl + enter" name="PostUtils.postMessageOnKeyPress no override: empty message on ctrl + enter" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening and closing backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, no ctrlKey|metaKey, with opening and closing backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with metaKey" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with metaKey" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks, with language set" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks, with language set" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks, with line break on last line" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks, with line break on last line" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks, with multiple line breaks on last lines" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening backticks, with multiple line breaks on last lines" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening and closing backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening and closing backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening and closing backticks, with language set" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with opening and closing backticks, with language set" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with inline opening backticks" name="PostUtils.postMessageOnKeyPress sendMessageOnCtrlEnter: Test for overriding sending of message on CTRL+ENTER, with ctrlKey, with inline opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, without opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, without opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, no ctrlKey|metaKey, with opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, without opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, without opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with metaKey, without opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with metaKey, without opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with line break" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with line break" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with multiple line breaks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with multiple line breaks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with language set" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with language set" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening and closing backticks, with language set" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening and closing backticks, with language set" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening and closing backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening and closing backticks" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with last line of empty spaces" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with last line of empty spaces" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with empty line break on last line" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with empty line break on last line" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with multiple empty line breaks on last lines" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with multiple empty line breaks on last lines" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with multiple empty line breaks and spaces on last lines" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, with multiple empty line breaks and spaces on last lines" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, without line break on last line" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with opening backticks, without line break on last line" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with inline opening backticks" name="PostUtils.postMessageOnKeyPress sendCodeBlockOnCtrlEnter: Test for overriding sending of code block on CTRL+ENTER, with ctrlKey, with inline opening backticks" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress now unspecified, last channel switch unspecified" name="PostUtils.postMessageOnKeyPress now unspecified, last channel switch unspecified" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress now specified, last channel switch unspecified" name="PostUtils.postMessageOnKeyPress now specified, last channel switch unspecified" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress now specified, last channel switch unspecified" name="PostUtils.postMessageOnKeyPress now specified, last channel switch unspecified" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress last channel switch within threshold" name="PostUtils.postMessageOnKeyPress last channel switch within threshold" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress last channel switch at threshold" name="PostUtils.postMessageOnKeyPress last channel switch at threshold" time="0.001">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress last channel switch outside threshold" name="PostUtils.postMessageOnKeyPress last channel switch outside threshold" time="0">
    </testcase>
    <testcase classname="PostUtils.postMessageOnKeyPress last channel switch well outside threshold" name="PostUtils.postMessageOnKeyPress last channel switch well outside threshold" time="0">
    </testcase>
  </testsuite>
  <testsuite name="rhs view actions" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:00" time="2.882" tests="16">
    <testcase classname="rhs view actions updateRhsState it dispatches UPDATE_RHS_STATE correctly" name="rhs view actions updateRhsState it dispatches UPDATE_RHS_STATE correctly" time="0.008">
    </testcase>
    <testcase classname="rhs view actions selectPostFromRightHandSideSearch it dispatches PostActions.getPostThread correctly" name="rhs view actions selectPostFromRightHandSideSearch it dispatches PostActions.getPostThread correctly" time="0.001">
    </testcase>
    <testcase classname="rhs view actions selectPostFromRightHandSideSearch it dispatches SELECT_POST correctly" name="rhs view actions selectPostFromRightHandSideSearch it dispatches SELECT_POST correctly" time="0.001">
    </testcase>
    <testcase classname="rhs view actions updateSearchTerms it dispatches UPDATE_RHS_SEARCH_TERMS correctly" name="rhs view actions updateSearchTerms it dispatches UPDATE_RHS_SEARCH_TERMS correctly" time="0">
    </testcase>
    <testcase classname="rhs view actions performSearch it dispatches searchPosts correctly" name="rhs view actions performSearch it dispatches searchPosts correctly" time="0.003">
    </testcase>
    <testcase classname="rhs view actions showSearchResults it dispatches the right actions" name="rhs view actions showSearchResults it dispatches the right actions" time="0.002">
    </testcase>
    <testcase classname="rhs view actions getFlaggedPosts it dispatches the right actions" name="rhs view actions getFlaggedPosts it dispatches the right actions" time="0.002">
    </testcase>
    <testcase classname="rhs view actions showFlaggedPosts it dispatches the right actions" name="rhs view actions showFlaggedPosts it dispatches the right actions" time="0.002">
    </testcase>
    <testcase classname="rhs view actions getPinnedPosts it dispatches the right actions" name="rhs view actions getPinnedPosts it dispatches the right actions" time="0.001">
    </testcase>
    <testcase classname="rhs view actions showPinnedPosts it dispatches the right actions" name="rhs view actions showPinnedPosts it dispatches the right actions" time="0.002">
    </testcase>
    <testcase classname="rhs view actions showMentions it dispatches the right actions" name="rhs view actions showMentions it dispatches the right actions" time="0.001">
    </testcase>
    <testcase classname="rhs view actions showMentions it calls trackEvent correctly" name="rhs view actions showMentions it calls trackEvent correctly" time="0.001">
    </testcase>
    <testcase classname="rhs view actions closeRightHandSide it dispatches the right actions" name="rhs view actions closeRightHandSide it dispatches the right actions" time="0.001">
    </testcase>
    <testcase classname="rhs view actions toggleMenu dispatches the right action" name="rhs view actions toggleMenu dispatches the right action" time="0.001">
    </testcase>
    <testcase classname="rhs view actions openMenu dispatches the right action" name="rhs view actions openMenu dispatches the right action" time="0">
    </testcase>
    <testcase classname="rhs view actions closeMenu dispatches the right action" name="rhs view actions closeMenu dispatches the right action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="utils/riff/recommendations/index" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:00" time="2.916" tests="11">
    <testcase classname="utils/riff/recommendations/index getGroupChannel should handle empty learningGroup being empty" name="utils/riff/recommendations/index getGroupChannel should handle empty learningGroup being empty" time="0.005">
    </testcase>
    <testcase classname="utils/riff/recommendations/index getGroupChannel should return the requested learningGroup object based on prefix" name="utils/riff/recommendations/index getGroupChannel should return the requested learningGroup object based on prefix" time="0.002">
    </testcase>
    <testcase classname="utils/riff/recommendations/index getGroupChannel should return an accurate array of teammateIds" name="utils/riff/recommendations/index getGroupChannel should return an accurate array of teammateIds" time="0.002">
    </testcase>
    <testcase classname="utils/riff/recommendations/index getRecommendations should display the recommendations for week 0 in that week" name="utils/riff/recommendations/index getRecommendations should display the recommendations for week 0 in that week" time="0.002">
    </testcase>
    <testcase classname="utils/riff/recommendations/index getRecommendations should display the recommendations for week 1 in that week" name="utils/riff/recommendations/index getRecommendations should display the recommendations for week 1 in that week" time="0.001">
    </testcase>
    <testcase classname="utils/riff/recommendations/index getRecommendations should display the recommendations for week 2 in that week" name="utils/riff/recommendations/index getRecommendations should display the recommendations for week 2 in that week" time="0.007">
    </testcase>
    <testcase classname="utils/riff/recommendations/index getRecommendations should display the recommendations for week 3 in that week" name="utils/riff/recommendations/index getRecommendations should display the recommendations for week 3 in that week" time="0.001">
    </testcase>
    <testcase classname="utils/riff/recommendations/index getRecommendations should display the recommendations for week 4 in that week" name="utils/riff/recommendations/index getRecommendations should display the recommendations for week 4 in that week" time="0.008">
    </testcase>
    <testcase classname="utils/riff/recommendations/index getRecommendations should display the recommendations for week 5 in that week" name="utils/riff/recommendations/index getRecommendations should display the recommendations for week 5 in that week" time="0.001">
    </testcase>
    <testcase classname="utils/riff/recommendations/index getRecommendations should display the recommendations for week 6 in that week" name="utils/riff/recommendations/index getRecommendations should display the recommendations for week 6 in that week" time="0.001">
    </testcase>
    <testcase classname="utils/riff/recommendations/index getRecommendations should display the recommendations for week 7 in that week" name="utils/riff/recommendations/index getRecommendations should display the recommendations for week 7 in that week" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Utils.getDisplayNameByUser" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:00" time="2.996" tests="18">
    <testcase classname="Utils.getDisplayNameByUser Show display name of user with TeammateNameDisplay set to username" name="Utils.getDisplayNameByUser Show display name of user with TeammateNameDisplay set to username" time="0.009">
    </testcase>
    <testcase classname="Utils.getDisplayNameByUser Show display name of user with TeammateNameDisplay set to nickname_full_name" name="Utils.getDisplayNameByUser Show display name of user with TeammateNameDisplay set to nickname_full_name" time="0.003">
    </testcase>
    <testcase classname="Utils.getDisplayNameByUser Show display name of user with TeammateNameDisplay set to username" name="Utils.getDisplayNameByUser Show display name of user with TeammateNameDisplay set to username" time="0.002">
    </testcase>
    <testcase classname="Utils.sortUsersByStatusAndDisplayName Users sort by status and displayname, TeammateNameDisplay set to username" name="Utils.sortUsersByStatusAndDisplayName Users sort by status and displayname, TeammateNameDisplay set to username" time="0.006">
    </testcase>
    <testcase classname="Utils.sortUsersByStatusAndDisplayName Users sort by status and displayname, TeammateNameDisplay set to nickname_full_name" name="Utils.sortUsersByStatusAndDisplayName Users sort by status and displayname, TeammateNameDisplay set to nickname_full_name" time="0.011">
    </testcase>
    <testcase classname="Utils.sortUsersByStatusAndDisplayName Users sort by status and displayname, TeammateNameDisplay set to full_name" name="Utils.sortUsersByStatusAndDisplayName Users sort by status and displayname, TeammateNameDisplay set to full_name" time="0.004">
    </testcase>
    <testcase classname="Utils.isValidPassword Minimum length enforced" name="Utils.isValidPassword Minimum length enforced" time="0.001">
    </testcase>
    <testcase classname="Utils.isValidPassword Require lowercase enforced" name="Utils.isValidPassword Require lowercase enforced" time="0">
    </testcase>
    <testcase classname="Utils.isValidPassword Require uppercase enforced" name="Utils.isValidPassword Require uppercase enforced" time="0.001">
    </testcase>
    <testcase classname="Utils.isValidPassword Require number enforced" name="Utils.isValidPassword Require number enforced" time="0.001">
    </testcase>
    <testcase classname="Utils.isValidPassword Require symbol enforced" name="Utils.isValidPassword Require symbol enforced" time="0">
    </testcase>
    <testcase classname="Utils.isKeyPressed Key match is used over keyCode if it exists" name="Utils.isKeyPressed Key match is used over keyCode if it exists" time="0.002">
    </testcase>
    <testcase classname="Utils.isKeyPressed Key match works for both uppercase and lower case" name="Utils.isKeyPressed Key match works for both uppercase and lower case" time="0.001">
    </testcase>
    <testcase classname="Utils.isKeyPressed KeyCode is used for dead letter keys" name="Utils.isKeyPressed KeyCode is used for dead letter keys" time="0.004">
    </testcase>
    <testcase classname="Utils.isKeyPressed KeyCode is used for unidentified keys" name="Utils.isKeyPressed KeyCode is used for unidentified keys" time="0.001">
    </testcase>
    <testcase classname="Utils.isKeyPressed KeyCode is used for undefined keys" name="Utils.isKeyPressed KeyCode is used for undefined keys" time="0.001">
    </testcase>
    <testcase classname="Utils.isKeyPressed keyCode is used for determining if it exists" name="Utils.isKeyPressed keyCode is used for determining if it exists" time="0">
    </testcase>
    <testcase classname="Utils.isKeyPressed key should be tested as fallback for different layout of english keyboards" name="Utils.isKeyPressed key should be tested as fallback for different layout of english keyboards" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Riff Recommendations Time Utility" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:03" time="0.483" tests="13">
    <testcase classname="Riff Recommendations Time Utility getCourseStartTime tests: Returns timelord&apos;s creation time:" name="Riff Recommendations Time Utility getCourseStartTime tests: Returns timelord&apos;s creation time:" time="0.003">
    </testcase>
    <testcase classname="Riff Recommendations Time Utility getCourseStartTime tests: Returns 0 if timelord does not exist:" name="Riff Recommendations Time Utility getCourseStartTime tests: Returns 0 if timelord does not exist:" time="0">
    </testcase>
    <testcase classname="Riff Recommendations Time Utility weekNumToMillis tests: Course just started:" name="Riff Recommendations Time Utility weekNumToMillis tests: Course just started:" time="0.001">
    </testcase>
    <testcase classname="Riff Recommendations Time Utility weekNumToMillis tests: Week 2:" name="Riff Recommendations Time Utility weekNumToMillis tests: Week 2:" time="0">
    </testcase>
    <testcase classname="Riff Recommendations Time Utility weekNumToMillis tests: Week 8:" name="Riff Recommendations Time Utility weekNumToMillis tests: Week 8:" time="0.001">
    </testcase>
    <testcase classname="Riff Recommendations Time Utility weekNumToMillis tests: Week 11:" name="Riff Recommendations Time Utility weekNumToMillis tests: Week 11:" time="0">
    </testcase>
    <testcase classname="Riff Recommendations Time Utility getCurrentWeekNumber tests: Course just started this millisecond:" name="Riff Recommendations Time Utility getCurrentWeekNumber tests: Course just started this millisecond:" time="0.001">
    </testcase>
    <testcase classname="Riff Recommendations Time Utility getCurrentWeekNumber tests: Middle of week 1:" name="Riff Recommendations Time Utility getCurrentWeekNumber tests: Middle of week 1:" time="0">
    </testcase>
    <testcase classname="Riff Recommendations Time Utility getCurrentWeekNumber tests: Alternate middle of week 1:" name="Riff Recommendations Time Utility getCurrentWeekNumber tests: Alternate middle of week 1:" time="0">
    </testcase>
    <testcase classname="Riff Recommendations Time Utility getCurrentWeekNumber tests: Week 1 completed:" name="Riff Recommendations Time Utility getCurrentWeekNumber tests: Week 1 completed:" time="0.001">
    </testcase>
    <testcase classname="Riff Recommendations Time Utility getCurrentWeekNumber tests: Middle of week 4:" name="Riff Recommendations Time Utility getCurrentWeekNumber tests: Middle of week 4:" time="0">
    </testcase>
    <testcase classname="Riff Recommendations Time Utility getCurrentWeekNumber tests: Alternate middle of week 4:" name="Riff Recommendations Time Utility getCurrentWeekNumber tests: Alternate middle of week 4:" time="0">
    </testcase>
    <testcase classname="Riff Recommendations Time Utility getCurrentWeekNumber tests: Week 4 completed:" name="Riff Recommendations Time Utility getCurrentWeekNumber tests: Week 4 completed:" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TextFormatting.mentionHighlighting" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:02" time="1.535" tests="10">
    <testcase classname="TextFormatting.mentionHighlighting no mentions" name="TextFormatting.mentionHighlighting no mentions" time="0.013">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting not an at-mention" name="TextFormatting.mentionHighlighting not an at-mention" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting at-mention" name="TextFormatting.mentionHighlighting at-mention" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting at-mention and non-at-mention for same word" name="TextFormatting.mentionHighlighting at-mention and non-at-mention for same word" time="0">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting case insensitive mentions" name="TextFormatting.mentionHighlighting case insensitive mentions" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting case sensitive mentions" name="TextFormatting.mentionHighlighting case sensitive mentions" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting at mention linking disabled, mentioned by non-at-mention" name="TextFormatting.mentionHighlighting at mention linking disabled, mentioned by non-at-mention" time="0">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting at mention linking disabled, mentioned by at-mention" name="TextFormatting.mentionHighlighting at mention linking disabled, mentioned by at-mention" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting mention highlighting disabled" name="TextFormatting.mentionHighlighting mention highlighting disabled" time="0">
    </testcase>
    <testcase classname="TextFormatting.mentionHighlighting mention highlighting and at mention linking disabled" name="TextFormatting.mentionHighlighting mention highlighting and at mention linking disabled" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Markdown.Links" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:02" time="1.247" tests="21">
    <testcase classname="Markdown.Links Not links" name="Markdown.Links Not links" time="0.011">
    </testcase>
    <testcase classname="Markdown.Links External links" name="Markdown.Links External links" time="0.002">
    </testcase>
    <testcase classname="Markdown.Links IP addresses" name="Markdown.Links IP addresses" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Links with anchors" name="Markdown.Links Links with anchors" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Links with parameters" name="Markdown.Links Links with parameters" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Special characters" name="Markdown.Links Special characters" time="0.003">
    </testcase>
    <testcase classname="Markdown.Links Brackets" name="Markdown.Links Brackets" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Email addresses" name="Markdown.Links Email addresses" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Formatted links" name="Markdown.Links Formatted links" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Links with text" name="Markdown.Links Links with text" time="0.002">
    </testcase>
    <testcase classname="Markdown.Links Links with tooltips" name="Markdown.Links Links with tooltips" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Links with surrounding text" name="Markdown.Links Links with surrounding text" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Links with trailing punctuation" name="Markdown.Links Links with trailing punctuation" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links Links with surrounding brackets" name="Markdown.Links Links with surrounding brackets" time="0.003">
    </testcase>
    <testcase classname="Markdown.Links Searching for links" name="Markdown.Links Searching for links" time="0.002">
    </testcase>
    <testcase classname="Markdown.Links Links containing %" name="Markdown.Links Links containing %" time="0">
    </testcase>
    <testcase classname="Markdown.Links Relative link" name="Markdown.Links Relative link" time="0.001">
    </testcase>
    <testcase classname="Markdown.Links autolinkedUrlSchemes all links are rendered when not provided" name="Markdown.Links autolinkedUrlSchemes all links are rendered when not provided" time="0.002">
    </testcase>
    <testcase classname="Markdown.Links autolinkedUrlSchemes no links are rendered when no schemes are provided" name="Markdown.Links autolinkedUrlSchemes no links are rendered when no schemes are provided" time="0.002">
    </testcase>
    <testcase classname="Markdown.Links autolinkedUrlSchemes only matching links are rendered when schemes are provided" name="Markdown.Links autolinkedUrlSchemes only matching links are rendered when schemes are provided" time="0.002">
    </testcase>
    <testcase classname="Markdown.Links autolinkedUrlSchemes explicit links are not affected by this setting" name="Markdown.Links autolinkedUrlSchemes explicit links are not affected by this setting" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Markdown.Imgs" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:03" time="0.468" tests="5">
    <testcase classname="Markdown.Imgs Inline mage" name="Markdown.Imgs Inline mage" time="0.006">
    </testcase>
    <testcase classname="Markdown.Imgs Image with hover text" name="Markdown.Imgs Image with hover text" time="0.001">
    </testcase>
    <testcase classname="Markdown.Imgs Image with link" name="Markdown.Imgs Image with link" time="0.001">
    </testcase>
    <testcase classname="Markdown.Imgs Image with width and height" name="Markdown.Imgs Image with width and height" time="0">
    </testcase>
    <testcase classname="Markdown.Imgs Image with width" name="Markdown.Imgs Image with width" time="0">
    </testcase>
  </testsuite>
  <testsuite name="components/ChannelMembersModal" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:03" time="0.649" tests="5">
    <testcase classname="components/ChannelMembersModal renders the channel display name" name="components/ChannelMembersModal renders the channel display name" time="0.011">
    </testcase>
    <testcase classname="components/ChannelMembersModal should call the onHide callback when the modal is hidden" name="components/ChannelMembersModal should call the onHide callback when the modal is hidden" time="0.002">
    </testcase>
    <testcase classname="components/ChannelMembersModal should show the invite modal link if the user can manage channel members" name="components/ChannelMembersModal should show the invite modal link if the user can manage channel members" time="0.003">
    </testcase>
    <testcase classname="components/ChannelMembersModal should not show the invite modal link if the user can not manage channel members" name="components/ChannelMembersModal should not show the invite modal link if the user can not manage channel members" time="0.003">
    </testcase>
    <testcase classname="components/ChannelMembersModal should call showInviteModal when the invite modal link is clicked" name="components/ChannelMembersModal should call showInviteModal when the invite modal link is clicked" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="stripMarkdown | RemoveMarkdown" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:03" time="0.561" tests="53">
    <testcase classname="stripMarkdown | RemoveMarkdown emoji: same" name="stripMarkdown | RemoveMarkdown emoji: same" time="0.007">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown at-mention: same" name="stripMarkdown | RemoveMarkdown at-mention: same" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown channel-link: same" name="stripMarkdown | RemoveMarkdown channel-link: same" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown codespan: single backtick" name="stripMarkdown | RemoveMarkdown codespan: single backtick" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown codespan: double backtick" name="stripMarkdown | RemoveMarkdown codespan: double backtick" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown codespan: triple backtick" name="stripMarkdown | RemoveMarkdown codespan: triple backtick" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown codespan: inline code" name="stripMarkdown | RemoveMarkdown codespan: inline code" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown codespan: multiline codespan" name="stripMarkdown | RemoveMarkdown codespan: multiline codespan" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown codespan: multiline codespan 2" name="stripMarkdown | RemoveMarkdown codespan: multiline codespan 2" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown codespan: language highlighting" name="stripMarkdown | RemoveMarkdown codespan: language highlighting" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown blockquote:" name="stripMarkdown | RemoveMarkdown blockquote:" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown blockquote: multiline" name="stripMarkdown | RemoveMarkdown blockquote: multiline" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: # H1 header" name="stripMarkdown | RemoveMarkdown heading: # H1 header" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: heading with @user" name="stripMarkdown | RemoveMarkdown heading: heading with @user" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: ## H2 header" name="stripMarkdown | RemoveMarkdown heading: ## H2 header" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: ### H3 header" name="stripMarkdown | RemoveMarkdown heading: ### H3 header" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: #### H4 header" name="stripMarkdown | RemoveMarkdown heading: #### H4 header" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: ##### H5 header" name="stripMarkdown | RemoveMarkdown heading: ##### H5 header" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: ###### H6 header" name="stripMarkdown | RemoveMarkdown heading: ###### H6 header" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: multiline with header and paragraph" name="stripMarkdown | RemoveMarkdown heading: multiline with header and paragraph" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: multiline with header and list items" name="stripMarkdown | RemoveMarkdown heading: multiline with header and list items" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown heading: multiline with header and links" name="stripMarkdown | RemoveMarkdown heading: multiline with header and links" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown list: 1. First ordered list item" name="stripMarkdown | RemoveMarkdown list: 1. First ordered list item" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown list: 2. Another item" name="stripMarkdown | RemoveMarkdown list: 2. Another item" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown list: * Unordered sub-list." name="stripMarkdown | RemoveMarkdown list: * Unordered sub-list." time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown list: - Or minuses" name="stripMarkdown | RemoveMarkdown list: - Or minuses" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown list: + Or pluses" name="stripMarkdown | RemoveMarkdown list: + Or pluses" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown list: multiline" name="stripMarkdown | RemoveMarkdown list: multiline" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown tablerow:)" name="stripMarkdown | RemoveMarkdown tablerow:)" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown table:" name="stripMarkdown | RemoveMarkdown table:" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown strong: Bold with **asterisks** or __underscores__." name="stripMarkdown | RemoveMarkdown strong: Bold with **asterisks** or __underscores__." time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown strong &amp; em: Bold and italics with **asterisks and _underscores_**." name="stripMarkdown | RemoveMarkdown strong &amp; em: Bold and italics with **asterisks and _underscores_**." time="0.013">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown em: Italics with *asterisks* or _underscores_." name="stripMarkdown | RemoveMarkdown em: Italics with *asterisks* or _underscores_." time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown del: Strikethrough ~~strike this.~~" name="stripMarkdown | RemoveMarkdown del: Strikethrough ~~strike this.~~" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown links: [inline-style link](http://localhost:8065)" name="stripMarkdown | RemoveMarkdown links: [inline-style link](http://localhost:8065)" time="0.002">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown image: ![image link](http://localhost:8065/image)" name="stripMarkdown | RemoveMarkdown image: ![image link](http://localhost:8065/image)" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: plain" name="stripMarkdown | RemoveMarkdown text: plain" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: multiline" name="stripMarkdown | RemoveMarkdown text: multiline" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: &amp;amp; entity" name="stripMarkdown | RemoveMarkdown text: &amp;amp; entity" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: &amp;lt; entity" name="stripMarkdown | RemoveMarkdown text: &amp;lt; entity" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: &amp;gt; entity" name="stripMarkdown | RemoveMarkdown text: &amp;gt; entity" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: &amp;#39; entity" name="stripMarkdown | RemoveMarkdown text: &amp;#39; entity" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: &amp;quot; entity" name="stripMarkdown | RemoveMarkdown text: &amp;quot; entity" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: multiple entities" name="stripMarkdown | RemoveMarkdown text: multiple entities" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: multiple entities" name="stripMarkdown | RemoveMarkdown text: multiple entities" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: multiple entities" name="stripMarkdown | RemoveMarkdown text: multiple entities" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: multiple entities" name="stripMarkdown | RemoveMarkdown text: multiple entities" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: multiple entities" name="stripMarkdown | RemoveMarkdown text: multiple entities" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: empty string" name="stripMarkdown | RemoveMarkdown text: empty string" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: null" name="stripMarkdown | RemoveMarkdown text: null" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: {}" name="stripMarkdown | RemoveMarkdown text: {}" time="0.001">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: []" name="stripMarkdown | RemoveMarkdown text: []" time="0">
    </testcase>
    <testcase classname="stripMarkdown | RemoveMarkdown text: node" name="stripMarkdown | RemoveMarkdown text: node" time="0">
    </testcase>
  </testsuite>
  <testsuite name="TextFormatting.searchHighlighting" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:03" time="0.512" tests="18">
    <testcase classname="TextFormatting.searchHighlighting no search highlighting" name="TextFormatting.searchHighlighting no search highlighting" time="0.013">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting" name="TextFormatting.searchHighlighting search term highlighting" time="0.002">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting with quoted phrase" name="TextFormatting.searchHighlighting search term highlighting with quoted phrase" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting with empty quoted phrase" name="TextFormatting.searchHighlighting search term highlighting with empty quoted phrase" time="0">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting with flags" name="TextFormatting.searchHighlighting search term highlighting with flags" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting with at mentions" name="TextFormatting.searchHighlighting search term highlighting with at mentions" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting in a code span" name="TextFormatting.searchHighlighting search term highlighting in a code span" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting in a code block" name="TextFormatting.searchHighlighting search term highlighting in a code block" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting in link text" name="TextFormatting.searchHighlighting search term highlighting in link text" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search term highlighting in link url" name="TextFormatting.searchHighlighting search term highlighting in link url" time="0">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting" name="TextFormatting.searchHighlighting search match highlighting" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting with quoted phrase" name="TextFormatting.searchHighlighting search match highlighting with quoted phrase" time="0">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting with at mentions" name="TextFormatting.searchHighlighting search match highlighting with at mentions" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting in a code span" name="TextFormatting.searchHighlighting search match highlighting in a code span" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting in a code block" name="TextFormatting.searchHighlighting search match highlighting in a code block" time="0">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting in link text" name="TextFormatting.searchHighlighting search match highlighting in link text" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting search match highlighting in link url" name="TextFormatting.searchHighlighting search match highlighting in link url" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.searchHighlighting wildcard highlighting" name="TextFormatting.searchHighlighting wildcard highlighting" time="0.028">
    </testcase>
  </testsuite>
  <testsuite name="Channel Utils" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:03" time="0.514" tests="16">
    <testcase classname="Channel Utils findNextUnreadChannelId no channels are unread" name="Channel Utils findNextUnreadChannelId no channels are unread" time="0.002">
    </testcase>
    <testcase classname="Channel Utils findNextUnreadChannelId only current channel is unread" name="Channel Utils findNextUnreadChannelId only current channel is unread" time="0.001">
    </testcase>
    <testcase classname="Channel Utils findNextUnreadChannelId going forward to unread channels" name="Channel Utils findNextUnreadChannelId going forward to unread channels" time="0">
    </testcase>
    <testcase classname="Channel Utils findNextUnreadChannelId going forward to unread channels with wrapping" name="Channel Utils findNextUnreadChannelId going forward to unread channels with wrapping" time="0.001">
    </testcase>
    <testcase classname="Channel Utils findNextUnreadChannelId going backwards to unread channels" name="Channel Utils findNextUnreadChannelId going backwards to unread channels" time="0">
    </testcase>
    <testcase classname="Channel Utils findNextUnreadChannelId going backwards to unread channels with wrapping" name="Channel Utils findNextUnreadChannelId going backwards to unread channels with wrapping" time="0.001">
    </testcase>
    <testcase classname="Channel Utils getChannelDisplayName should return display name unmodified for channels of type D" name="Channel Utils getChannelDisplayName should return display name unmodified for channels of type D" time="0">
    </testcase>
    <testcase classname="Channel Utils getChannelDisplayName should return display name unmodified for channels of type O" name="Channel Utils getChannelDisplayName should return display name unmodified for channels of type O" time="0">
    </testcase>
    <testcase classname="Channel Utils getChannelDisplayName should return display name unmodified for channels of type P" name="Channel Utils getChannelDisplayName should return display name unmodified for channels of type P" time="0.001">
    </testcase>
    <testcase classname="Channel Utils getChannelDisplayName should return display name unmodified if there is no current user" name="Channel Utils getChannelDisplayName should return display name unmodified if there is no current user" time="0">
    </testcase>
    <testcase classname="Channel Utils getChannelDisplayName should splice out current username with three users when at the beginning" name="Channel Utils getChannelDisplayName should splice out current username with three users when at the beginning" time="0.001">
    </testcase>
    <testcase classname="Channel Utils getChannelDisplayName should splice out current username with three users when in the middle" name="Channel Utils getChannelDisplayName should splice out current username with three users when in the middle" time="0">
    </testcase>
    <testcase classname="Channel Utils getChannelDisplayName should splice out current username with three users when at the end" name="Channel Utils getChannelDisplayName should splice out current username with three users when at the end" time="0.001">
    </testcase>
    <testcase classname="Channel Utils getChannelDisplayName should splice out current username with four users when at the beginning" name="Channel Utils getChannelDisplayName should splice out current username with four users when at the beginning" time="0">
    </testcase>
    <testcase classname="Channel Utils getChannelDisplayName should splice out current username with four users when in the middle" name="Channel Utils getChannelDisplayName should splice out current username with four users when in the middle" time="0.001">
    </testcase>
    <testcase classname="Channel Utils getChannelDisplayName should splice out current username with four users when at the end" name="Channel Utils getChannelDisplayName should splice out current username with four users when at the end" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Riff Recommendation Channel Utils" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:03" time="0.5" tests="10">
    <testcase classname="Riff Recommendation Channel Utils getChannelURL Normal channel." name="Riff Recommendation Channel Utils getChannelURL Normal channel." time="0.003">
    </testcase>
    <testcase classname="Riff Recommendation Channel Utils getChannelURL Channel not present: " name="Riff Recommendation Channel Utils getChannelURL Channel not present: " time="0">
    </testcase>
    <testcase classname="Riff Recommendation Channel Utils getChannelURL No channels at all." name="Riff Recommendation Channel Utils getChannelURL No channels at all." time="0">
    </testcase>
    <testcase classname="Riff Recommendation Channel Utils getChannelURL Two channels with same name." name="Riff Recommendation Channel Utils getChannelURL Two channels with same name." time="0">
    </testcase>
    <testcase classname="Riff Recommendation Channel Utils didUserPostInChannel user did post once" name="Riff Recommendation Channel Utils didUserPostInChannel user did post once" time="0.001">
    </testcase>
    <testcase classname="Riff Recommendation Channel Utils didUserPostInChannel user did not post" name="Riff Recommendation Channel Utils didUserPostInChannel user did not post" time="0">
    </testcase>
    <testcase classname="Riff Recommendation Channel Utils didUserPostInChannel user posted more than once." name="Riff Recommendation Channel Utils didUserPostInChannel user posted more than once." time="0.001">
    </testcase>
    <testcase classname="Riff Recommendation Channel Utils didUserPostInChannel empty posts" name="Riff Recommendation Channel Utils didUserPostInChannel empty posts" time="0">
    </testcase>
    <testcase classname="Riff Recommendation Channel Utils didUserPostInChannel Only join events" name="Riff Recommendation Channel Utils didUserPostInChannel Only join events" time="0.001">
    </testcase>
    <testcase classname="Riff Recommendation Channel Utils didUserPostInChannel Join &amp; regular post" name="Riff Recommendation Channel Utils didUserPostInChannel Join &amp; regular post" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="messageHtmlToComponent" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:03" time="0.532" tests="2">
    <testcase classname="messageHtmlToComponent plain text" name="messageHtmlToComponent plain text" time="0.012">
    </testcase>
    <testcase classname="messageHtmlToComponent latex" name="messageHtmlToComponent latex" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="Actions.Posts" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.477" tests="2">
    <testcase classname="Actions.Posts setEditingPost" name="Actions.Posts setEditingPost" time="0.006">
    </testcase>
    <testcase classname="Actions.Posts hideEditPostModal" name="Actions.Posts hideEditPostModal" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TextFormatting.ChannelLinks" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:03" time="0.534" tests="5">
    <testcase classname="TextFormatting.ChannelLinks Not channel links" name="TextFormatting.ChannelLinks Not channel links" time="0.007">
    </testcase>
    <testcase classname="TextFormatting.ChannelLinks Channel links should link ~town-square" name="TextFormatting.ChannelLinks Channel links should link ~town-square" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.ChannelLinks Channel links should link ~town-square followed by a period" name="TextFormatting.ChannelLinks Channel links should link ~town-square followed by a period" time="0">
    </testcase>
    <testcase classname="TextFormatting.ChannelLinks Channel links should link ~town-square, with display_name an HTML string" name="TextFormatting.ChannelLinks Channel links should link ~town-square, with display_name an HTML string" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.ChannelLinks Channel links should link ~town-square, with a basename defined" name="TextFormatting.ChannelLinks Channel links should link ~town-square, with a basename defined" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Selectors.Rhs" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.463" tests="4">
    <testcase classname="Selectors.Rhs should return the open state of the sidebar when open is true" name="Selectors.Rhs should return the open state of the sidebar when open is true" time="0.019">
    </testcase>
    <testcase classname="Selectors.Rhs should return the open state of the sidebar when open is false" name="Selectors.Rhs should return the open state of the sidebar when open is false" time="0">
    </testcase>
    <testcase classname="Selectors.Rhs should return the open state of the sidebar menu when open is true" name="Selectors.Rhs should return the open state of the sidebar menu when open is true" time="0.001">
    </testcase>
    <testcase classname="Selectors.Rhs should return the open state of the sidebar menu when open is false" name="Selectors.Rhs should return the open state of the sidebar menu when open is false" time="0">
    </testcase>
  </testsuite>
  <testsuite name="TextFormatting.Emails" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.454" tests="6">
    <testcase classname="TextFormatting.Emails Valid email addresses" name="TextFormatting.Emails Valid email addresses" time="0.004">
    </testcase>
    <testcase classname="TextFormatting.Emails Should be valid, but matching GitHub" name="TextFormatting.Emails Should be valid, but matching GitHub" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.Emails Should be valid, but broken due to Markdown parsing happening before email autolinking" name="TextFormatting.Emails Should be valid, but broken due to Markdown parsing happening before email autolinking" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.Emails Not valid emails" name="TextFormatting.Emails Not valid emails" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.Emails Should be invalid, but matching GitHub" name="TextFormatting.Emails Should be invalid, but matching GitHub" time="0.001">
    </testcase>
    <testcase classname="TextFormatting.Emails Should be invalid, but broken" name="TextFormatting.Emails Should be invalid, but broken" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Reducers.Storage" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.207" tests="8">
    <testcase classname="Reducers.Storage Storage.SET_ITEM" name="Reducers.Storage Storage.SET_ITEM" time="0.002">
    </testcase>
    <testcase classname="Reducers.Storage Storage.SET_GLOBAL_ITEM" name="Reducers.Storage Storage.SET_GLOBAL_ITEM" time="0">
    </testcase>
    <testcase classname="Reducers.Storage Storage.REMOVE_ITEM" name="Reducers.Storage Storage.REMOVE_ITEM" time="0">
    </testcase>
    <testcase classname="Reducers.Storage Storage.REMOVE_GLOBAL_ITEM" name="Reducers.Storage Storage.REMOVE_GLOBAL_ITEM" time="0">
    </testcase>
    <testcase classname="Reducers.Storage Storage.CLEAR" name="Reducers.Storage Storage.CLEAR" time="0">
    </testcase>
    <testcase classname="Reducers.Storage Storage.ACTION_ON_ITEMS_WITH_PREFIX" name="Reducers.Storage Storage.ACTION_ON_ITEMS_WITH_PREFIX" time="0.001">
    </testcase>
    <testcase classname="Reducers.Storage Storage.ACTION_ON_GLOBAL_ITEMS_WITH_PREFIX" name="Reducers.Storage Storage.ACTION_ON_GLOBAL_ITEMS_WITH_PREFIX" time="0">
    </testcase>
    <testcase classname="Reducers.Storage Storage.STORAGE_REHYDRATE" name="Reducers.Storage Storage.STORAGE_REHYDRATE" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Reducers.Modals" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.278" tests="3">
    <testcase classname="Reducers.Modals Initial state" name="Reducers.Modals Initial state" time="0.001">
    </testcase>
    <testcase classname="Reducers.Modals MODAL_OPEN" name="Reducers.Modals MODAL_OPEN" time="0">
    </testcase>
    <testcase classname="Reducers.Modals MODAL_CLOSE" name="Reducers.Modals MODAL_CLOSE" time="0">
    </testcase>
  </testsuite>
  <testsuite name="modals view actions" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.276" tests="2">
    <testcase classname="modals view actions MODAL_OPEN" name="modals view actions MODAL_OPEN" time="0">
    </testcase>
    <testcase classname="modals view actions MODAL_CLOSE" name="modals view actions MODAL_CLOSE" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Recommendations Class" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.47" tests="4">
    <testcase classname="Recommendations Class should calculate if meeting is complete based on provided function" name="Recommendations Class should calculate if meeting is complete based on provided function" time="0.003">
    </testcase>
    <testcase classname="Recommendations Class should calculate whether or not to display properly" name="Recommendations Class should calculate whether or not to display properly" time="0.001">
    </testcase>
    <testcase classname="Recommendations Class should calculate priority correctly" name="Recommendations Class should calculate priority correctly" time="0.001">
    </testcase>
    <testcase classname="Recommendations Class should display given text" name="Recommendations Class should display given text" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Meeting Utils" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.505" tests="4">
    <testcase classname="Meeting Utils numberOfUserMeetingsDuringWeeks should handle when the user has been in no meetings with teammates" name="Meeting Utils numberOfUserMeetingsDuringWeeks should handle when the user has been in no meetings with teammates" time="0.004">
    </testcase>
    <testcase classname="Meeting Utils numberOfUserMeetingsDuringWeeks should handle when the user has been in exactly one meeting with exactly one teammate" name="Meeting Utils numberOfUserMeetingsDuringWeeks should handle when the user has been in exactly one meeting with exactly one teammate" time="0.001">
    </testcase>
    <testcase classname="Meeting Utils numberOfUserMeetingsDuringWeeks should handle when the user has been in exactly one meeting with more than one teammate" name="Meeting Utils numberOfUserMeetingsDuringWeeks should handle when the user has been in exactly one meeting with more than one teammate" time="0">
    </testcase>
    <testcase classname="Meeting Utils numberOfUserMeetingsDuringWeeks should handle when the user has been in multiple meetings with more than one teammate" name="Meeting Utils numberOfUserMeetingsDuringWeeks should handle when the user has been in multiple meetings with more than one teammate" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TextFormatting.AtMentions" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.495" tests="4">
    <testcase classname="TextFormatting.AtMentions At mentions" name="TextFormatting.AtMentions At mentions" time="0.002">
    </testcase>
    <testcase classname="TextFormatting.AtMentions Not at mentions" name="TextFormatting.AtMentions Not at mentions" time="0">
    </testcase>
    <testcase classname="TextFormatting.AtMentions Highlighted at mentions" name="TextFormatting.AtMentions Highlighted at mentions" time="0.004">
    </testcase>
    <testcase classname="TextFormatting.AtMentions Mix highlight at mentions" name="TextFormatting.AtMentions Mix highlight at mentions" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="FileUtils.trimFilename" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.163" tests="5">
    <testcase classname="FileUtils.trimFilename trimFilename" name="FileUtils.trimFilename trimFilename" time="0.001">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles is false when file attachments are disabled" name="FileUtils.canUploadFiles is false when file attachments are disabled" time="0">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles is true when file attachments are enabled and not on mobile" name="FileUtils.canUploadFiles is true when file attachments are enabled and not on mobile" time="0.001">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles is true when file attachments are enabled and on mobile with mobile file upload enabled" name="FileUtils.canUploadFiles is true when file attachments are enabled and on mobile with mobile file upload enabled" time="0">
    </testcase>
    <testcase classname="FileUtils.canUploadFiles is true when file attachments are enabled unless on mobile with mobile file upload disabled" name="FileUtils.canUploadFiles is true when file attachments are enabled unless on mobile with mobile file upload disabled" time="0">
    </testcase>
  </testsuite>
  <testsuite name="stores/SuggestionStore" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.173" tests="4">
    <testcase classname="stores/SuggestionStore should ignore events from unknown suggestion boxes" name="stores/SuggestionStore should ignore events from unknown suggestion boxes" time="0.001">
    </testcase>
    <testcase classname="stores/SuggestionStore should process events from registered suggestion boxes" name="stores/SuggestionStore should process events from registered suggestion boxes" time="0">
    </testcase>
    <testcase classname="stores/SuggestionStore should ignore events from unregistered suggestion boxes" name="stores/SuggestionStore should ignore events from unregistered suggestion boxes" time="0">
    </testcase>
    <testcase classname="stores/SuggestionStore hasSuggestions should ignore loading items" name="stores/SuggestionStore hasSuggestions should ignore loading items" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="TextFormatting.Hashtags" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.483" tests="5">
    <testcase classname="TextFormatting.Hashtags Not hashtags" name="TextFormatting.Hashtags Not hashtags" time="0.008">
    </testcase>
    <testcase classname="TextFormatting.Hashtags Hashtags" name="TextFormatting.Hashtags Hashtags" time="0.002">
    </testcase>
    <testcase classname="TextFormatting.Hashtags Formatted hashtags" name="TextFormatting.Hashtags Formatted hashtags" time="0.002">
    </testcase>
    <testcase classname="TextFormatting.Hashtags Searching for hashtags" name="TextFormatting.Hashtags Searching for hashtags" time="0.002">
    </testcase>
    <testcase classname="TextFormatting.Hashtags Potential hashtags with other entities nested" name="TextFormatting.Hashtags Potential hashtags with other entities nested" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Reducers.RHS" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.231" tests="18">
    <testcase classname="Reducers.RHS Initial state" name="Reducers.RHS Initial state" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should match RHS state to pin" name="Reducers.RHS should match RHS state to pin" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should wipe selectedPostId on UPDATE_RHS_STATE" name="Reducers.RHS should wipe selectedPostId on UPDATE_RHS_STATE" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should match isSearchingTerm state to true" name="Reducers.RHS should match isSearchingTerm state to true" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should match isSearchingTerm state to false" name="Reducers.RHS should match isSearchingTerm state to false" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should match isSearchingTerm state to false" name="Reducers.RHS should match isSearchingTerm state to false" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should match isSearchingFlaggedPost state to true" name="Reducers.RHS should match isSearchingFlaggedPost state to true" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should match isSearchingFlaggedPost state to false" name="Reducers.RHS should match isSearchingFlaggedPost state to false" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should match searchTerms state" name="Reducers.RHS should match searchTerms state" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should match select_post state" name="Reducers.RHS should match select_post state" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should wipe rhsState on SELECT_POST" name="Reducers.RHS should wipe rhsState on SELECT_POST" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should open menu, closing sidebar on TOGGLE_RHS_MENU" name="Reducers.RHS should open menu, closing sidebar on TOGGLE_RHS_MENU" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should close menu on TOGGLE_RHS_MENU" name="Reducers.RHS should close menu on TOGGLE_RHS_MENU" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should open menu, closing sidebar on OPEN_RHS_MENU" name="Reducers.RHS should open menu, closing sidebar on OPEN_RHS_MENU" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should close menu on CLOSE_RHS_MENU" name="Reducers.RHS should close menu on CLOSE_RHS_MENU" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should close menu and sidebar on TOGGLE_LHS" name="Reducers.RHS should close menu and sidebar on TOGGLE_LHS" time="0.001">
    </testcase>
    <testcase classname="Reducers.RHS should close menu and sidebar on OPEN_LHS" name="Reducers.RHS should close menu and sidebar on OPEN_LHS" time="0">
    </testcase>
    <testcase classname="Reducers.RHS should close menu and sidebar on SELECT_TEAM" name="Reducers.RHS should close menu and sidebar on SELECT_TEAM" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Reducers.LHS" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.215" tests="8">
    <testcase classname="Reducers.LHS Initial state" name="Reducers.LHS Initial state" time="0.002">
    </testcase>
    <testcase classname="Reducers.LHS should close on TOGGLE_LHS" name="Reducers.LHS should close on TOGGLE_LHS" time="0.001">
    </testcase>
    <testcase classname="Reducers.LHS should open on TOGGLE_LHS" name="Reducers.LHS should open on TOGGLE_LHS" time="0">
    </testcase>
    <testcase classname="Reducers.LHS should open on OPEN_LHS" name="Reducers.LHS should open on OPEN_LHS" time="0.001">
    </testcase>
    <testcase classname="Reducers.LHS should close on CLOSE_LHS" name="Reducers.LHS should close on CLOSE_LHS" time="0">
    </testcase>
    <testcase classname="Reducers.LHS should close on TOGGLE_RHS_MENU" name="Reducers.LHS should close on TOGGLE_RHS_MENU" time="0.001">
    </testcase>
    <testcase classname="Reducers.LHS should close on OPEN_RHS_MENU" name="Reducers.LHS should close on OPEN_RHS_MENU" time="0">
    </testcase>
    <testcase classname="Reducers.LHS should close on SELECT_TEAM" name="Reducers.LHS should close on SELECT_TEAM" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Selectors.Lhs" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.195" tests="2">
    <testcase classname="Selectors.Lhs should return the open state of the sidebar menu when open is true" name="Selectors.Lhs should return the open state of the sidebar menu when open is true" time="0.001">
    </testcase>
    <testcase classname="Selectors.Lhs should return the open state of the sidebar menu when open is false" name="Selectors.Lhs should return the open state of the sidebar menu when open is false" time="0">
    </testcase>
  </testsuite>
  <testsuite name="TeamUtils.filterAndSortTeamsByDisplayName" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.173" tests="1">
    <testcase classname="TeamUtils.filterAndSortTeamsByDisplayName should return correct sorted teams" name="TeamUtils.filterAndSortTeamsByDisplayName should return correct sorted teams" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Utils.URL" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:05" time="0.153" tests="6">
    <testcase classname="Utils.URL getRelativeChannelURL" name="Utils.URL getRelativeChannelURL" time="0.001">
    </testcase>
    <testcase classname="Utils.URL getSiteURL origin" name="Utils.URL getSiteURL origin" time="0.001">
    </testcase>
    <testcase classname="Utils.URL getSiteURL origin, trailing slash" name="Utils.URL getSiteURL origin, trailing slash" time="0">
    </testcase>
    <testcase classname="Utils.URL getSiteURL origin, with basename" name="Utils.URL getSiteURL origin, with basename" time="0.001">
    </testcase>
    <testcase classname="Utils.URL getSiteURL no origin" name="Utils.URL getSiteURL no origin" time="0">
    </testcase>
    <testcase classname="Utils.URL getSiteURL no origin, with basename" name="Utils.URL getSiteURL no origin, with basename" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Reducers.Browser" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:04" time="0.198" tests="3">
    <testcase classname="Reducers.Browser Initial state" name="Reducers.Browser Initial state" time="0.001">
    </testcase>
    <testcase classname="Reducers.Browser should lose focus on BROWSER_CHANGE_FOCUS" name="Reducers.Browser should lose focus on BROWSER_CHANGE_FOCUS" time="0">
    </testcase>
    <testcase classname="Reducers.Browser should gain focus on BROWSER_CHANGE_FOCUS" name="Reducers.Browser should gain focus on BROWSER_CHANGE_FOCUS" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="PolicyRolesAdapter" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:05" time="0.161" tests="10">
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping unknown value throws an exception" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping unknown value throws an exception" time="0.002">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping ignores unknown keys" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping ignores unknown keys" time="0.001">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping mock data setup" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping mock data setup" time="0">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableTeamCreation true" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableTeamCreation true" time="0.002">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableTeamCreation false" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableTeamCreation false" time="0.001">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableOnlyAdminIntegrations true" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableOnlyAdminIntegrations true" time="0.001">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableOnlyAdminIntegrations false" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping enableOnlyAdminIntegrations false" time="0.001">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping it only returns the updated roles" name="PolicyRolesAdapter PolicyRolesAdapter.rolesFromMapping it only returns the updated roles" time="0.001">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.mappingValueFromRoles enableTeamCreation returns the expected policy value for a enableTeamCreation policy" name="PolicyRolesAdapter PolicyRolesAdapter.mappingValueFromRoles enableTeamCreation returns the expected policy value for a enableTeamCreation policy" time="0.001">
    </testcase>
    <testcase classname="PolicyRolesAdapter PolicyRolesAdapter.mappingValueFromRoles enableOnlyAdminIntegrations returns the expected policy value for a enableOnlyAdminIntegrations policy" name="PolicyRolesAdapter PolicyRolesAdapter.mappingValueFromRoles enableOnlyAdminIntegrations returns the expected policy value for a enableOnlyAdminIntegrations policy" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="lhs view actions" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:05" time="0.169" tests="3">
    <testcase classname="lhs view actions toggle dispatches the right action" name="lhs view actions toggle dispatches the right action" time="0.002">
    </testcase>
    <testcase classname="lhs view actions open dispatches the right action" name="lhs view actions open dispatches the right action" time="0">
    </testcase>
    <testcase classname="lhs view actions close dispatches the right action" name="lhs view actions close dispatches the right action" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="modals selector" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:05" time="0.141" tests="2">
    <testcase classname="modals selector should return the isOpen value from the state for the given modalId" name="modals selector should return the isOpen value from the state for the given modalId" time="0.001">
    </testcase>
    <testcase classname="modals selector should return false when the given ModalId is not in state" name="modals selector should return false when the given ModalId is not in state" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Emoticons" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:05" time="0.147" tests="5">
    <testcase classname="Emoticons handleEmoticons should replace emoticons with tokens" name="Emoticons handleEmoticons should replace emoticons with tokens" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons should replace emoticons not separated by whitespace" name="Emoticons handleEmoticons should replace emoticons not separated by whitespace" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons should replace emoticons separated by punctuation" name="Emoticons handleEmoticons should replace emoticons separated by punctuation" time="0.001">
    </testcase>
    <testcase classname="Emoticons handleEmoticons should replace emoticons separated by text" name="Emoticons handleEmoticons should replace emoticons separated by text" time="0">
    </testcase>
    <testcase classname="Emoticons handleEmoticons shouldn&apos;t replace invalid emoticons" name="Emoticons handleEmoticons shouldn&apos;t replace invalid emoticons" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="utils/server_version/equalServerVersions" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:05" time="0.132" tests="10">
    <testcase classname="utils/server_version/equalServerVersions should handle undefined values" name="utils/server_version/equalServerVersions should handle undefined values" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should consider two empty versions as equal" name="utils/server_version/equalServerVersions should consider two empty versions as equal" time="0">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should consider different strings without components as equal" name="utils/server_version/equalServerVersions should consider different strings without components as equal" time="0">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should consider different malformed versions as equal ignoring the last two components" name="utils/server_version/equalServerVersions should consider different malformed versions as equal ignoring the last two components" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should consider an empty version different from a non-empty one" name="utils/server_version/equalServerVersions should consider an empty version different from a non-empty one" time="0">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should consider the same versions equal" name="utils/server_version/equalServerVersions should consider the same versions equal" time="0">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should consider different release versions unequal" name="utils/server_version/equalServerVersions should consider different release versions unequal" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should consider different build numbers unequal" name="utils/server_version/equalServerVersions should consider different build numbers unequal" time="0">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should ignore different config hashes" name="utils/server_version/equalServerVersions should ignore different config hashes" time="0.001">
    </testcase>
    <testcase classname="utils/server_version/equalServerVersions should ignore different licensed statuses" name="utils/server_version/equalServerVersions should ignore different licensed statuses" time="0">
    </testcase>
  </testsuite>
  <testsuite name="CommonUtils.getNearestPoint" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:05" time="0.134" tests="1">
    <testcase classname="CommonUtils.getNearestPoint should return nearest point" name="CommonUtils.getNearestPoint should return nearest point" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="stores/LocalStorageStore" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:05" time="0.196" tests="2">
    <testcase classname="stores/LocalStorageStore should persist previous team id per user" name="stores/LocalStorageStore should persist previous team id per user" time="0.001">
    </testcase>
    <testcase classname="stores/LocalStorageStore should persist previous channel name per team and user" name="stores/LocalStorageStore should persist previous channel name per team and user" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Latinise" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:05" time="0.107" tests="3">
    <testcase classname="Latinise handleNames should return ascii version of Dév Spé" name="Latinise handleNames should return ascii version of Dév Spé" time="0.001">
    </testcase>
    <testcase classname="Latinise handleNames should not replace any characters" name="Latinise handleNames should not replace any characters" time="0.001">
    </testcase>
    <testcase classname="Latinise handleNames should replace characters with diacritics with ascii equivalents" name="Latinise handleNames should replace characters with diacritics with ascii equivalents" time="0">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:05" time="0.154" tests="1">
    <testcase classname=" Should return placement position for overlay based on bounds, space required and innerHeight" name=" Should return placement position for overlay based on bounds, space required and innerHeight" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Selectors.Storage" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:05" time="0.084" tests="3">
    <testcase classname="Selectors.Storage getPrefix" name="Selectors.Storage getPrefix" time="0.001">
    </testcase>
    <testcase classname="Selectors.Storage makeGetGlobalItem" name="Selectors.Storage makeGetGlobalItem" time="0">
    </testcase>
    <testcase classname="Selectors.Storage makeGetItem" name="Selectors.Storage makeGetItem" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Riff Utils" errors="0" failures="0" skipped="0" timestamp="2019-10-30T21:27:05" time="0.076" tests="1">
    <testcase classname="Riff Utils readablePeers handles empty array" name="Riff Utils readablePeers handles empty array" time="0">
    </testcase>
  </testsuite>
</testsuites>